import {html, css, type CSSResult} from 'lit';
import {property} from 'lit/decorators.js';

import {TiniElement, ElementParts, createStyleBuilder, Colors, Sizes} from '@tinijs/core';

export enum XXXParts {
  Main = ElementParts.Main,
}

type ComponentConstructor = typeof import('./xxx.js').default;
type Component = import('./xxx.js').default;

export default class extends TiniElement {

  /* eslint-disable prettier/prettier */
  @property({type: String, reflect: true}) prop?: string;
  /* eslint-enable prettier/prettier */

  protected render() {
    return this.partRender(
      XXXParts.Main,
      mainChildren => html`
        <xxx class=${XXXParts.Main} part=${XXXParts.Main}>
          ${mainChildren()}
        </xxx>
      `
    );
  }
}

export const defaultStyles = createStyleBuilder<{
  statics: CSSResult;
}>(outputs => [
  css`
    :host {

    }

    .main {

    }
  `,

  outputs.statics,
]);