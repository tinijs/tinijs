import {html} from 'lit';
import {Page, TiniComponent} from '@tinijs/core';
import {TiniXxxComponent} from '@ui';

import {
  renderSection,
  RenderSectionOptions,
} from '../../utils/varies.js';
import {ConsumerPlatforms} from '../../consts/main.js';
import {CodeBuilder, ReactCommonProps} from '../../utils/code-builder.js';

import {AppComponentPageComponent} from '../../components/component-page.js';
import {AppSectionComponent} from '../../components/section.js';

@Page({
  name: 'app-page-components-xxx',
  components: [
    TiniXxxComponent,
    AppComponentPageComponent,
    AppSectionComponent,
  ],
})
export class AppPageComponentsXxx extends TiniComponent {
  private readonly PART_LIST = [
    ['root', 'The root part'],
  ];

  private readonly PREPROCESS_CODE: CodeBuilder = builder => builder;

  private readonly CODE_BUILDERS: Record<string, CodeBuilder> = {
    [ConsumerPlatforms.React]: builder => builder,
  };

  private renderSectionOptions?: RenderSectionOptions;
  onChanges() {
    this.renderSectionOptions = {
      preprocessCode: this.PREPROCESS_CODE,
      codeBuilders: this.CODE_BUILDERS,
    };
  }

  protected render() {
    return html`
      <app-component-page
        titleText="Xxx"
        name="xxx"
        path="components/xxx"
        .component=${TiniXxxComponent}
        .partList=${this.PART_LIST}
      >
        <div slot="description">Xxx description.</div>
      </app-component-page>
    `;
  }
}
